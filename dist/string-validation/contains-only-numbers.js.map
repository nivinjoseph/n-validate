{"version":3,"file":"contains-only-numbers.js","sourceRoot":"","sources":["../../src/string-validation/contains-only-numbers.ts"],"names":[],"mappings":";;;;;;;;;;;;AACA,6EAAyE;AAEzE,SAAS;AACT;IAEI,MAAM,CAAC,IAAI,yBAAyB,EAAE,CAAC;AAC3C,CAAC;AAHD,kDAGC;AAED;IAAwC,6CAAwB;IAE5D;QAAA,YAEI,iBAAO,SAMV;QALG,KAAI,CAAC,iBAAiB,CAClB;YACI,QAAQ,EAAE,UAAA,CAAC,IAAI,OAAA,CAAC,IAAI,IAAI,IAAI,KAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,EAA7B,CAA6B;YAC5C,KAAK,EAAE,eAAe;SACzB,CAAC,CAAC;;IACX,CAAC;IACL,gCAAC;AAAD,CAAC,AAXD,CAAwC,sDAAwB,GAW/D","sourcesContent":["import { ValidationRule } from \"./../validation-rule\";\nimport { BaseStringValidationRule } from \"./base-string-validation-rule\";\n\n// public\nexport function containsOnlyNumbers(): ValidationRule<string>\n{\n    return new StringContainsOnlyNumbers();\n}\n\nclass StringContainsOnlyNumbers extends BaseStringValidationRule\n{\n    public constructor()\n    {\n        super();\n        this.addValidationRule(\n            {\n                validate: t => t == null || this.isNumber(t),\n                error: \"Invalid value\"\n            });\n    }\n}"]}