{"version":3,"file":"internal-property-validator.js","sourceRoot":"","sources":["../src/internal-property-validator.ts"],"names":[],"mappings":"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","sourcesContent":["import { PropertyValidator } from \"./property-validator\";\nimport { InternalPropertyValidationRule } from \"./internal-property-validation-rule\";\nimport { ValidationRule } from \"./validation-rule\";\nimport { Validator } from \"./validator\";\nimport { given } from \"@nivinjoseph/n-defensive\";\nimport { ArgumentException } from \"@nivinjoseph/n-exception\";\nimport \"@nivinjoseph/n-ext\";\n\n// internal\nexport class InternalPropertyValidator<T, TProperty> implements PropertyValidator<T, TProperty>\n{\n    private readonly _propertyName: string;\n    private _hasError: boolean = false;\n    private _error: any = null;\n    private readonly _validationRules = new Array<InternalPropertyValidationRule<T, TProperty>>();\n    private _lastValidationRule: InternalPropertyValidationRule<T, TProperty> = null;\n    private _conditionPredicate: (value: T) => boolean = null;\n    private _overrideError = false;\n    private _errorMessage: string | Function;\n\n\n    public get propertyName(): string { return this._propertyName; }\n    public get hasError(): boolean { return this._hasError; }\n    public get error(): string { return this._error; }\n\n\n    public constructor(propertyName: string)\n    {\n        this._propertyName = propertyName;\n    }\n\n\n    public validate(value: T): void\n    {\n        this._hasError = false;\n        this._error = null;\n        \n        if (this._conditionPredicate != null && !this._conditionPredicate(value))\n            return;\n        \n        let propertyVal = (<Object>value).getValue(this._propertyName);\n\n        for (let i = 0; i < this._validationRules.length; i++)\n        {\n            let validationRule = this._validationRules[i];\n            let validationResult = true;\n\n            try\n            {\n                validationResult = validationRule.validate(value, propertyVal);\n            }\n            catch (e)\n            {\n                if (e === \"OPTIONAL\")\n                    break;\n\n                throw e;\n            }\n\n            if (!validationResult)\n            {\n                this._hasError = true;\n                // this._error = this._overrideError ? this._errorMessage : validationRule.error;\n                let error = validationRule.error;\n                if (this._overrideError && !validationRule.overrideError)\n                    error = typeof this._errorMessage === \"function\" ? this._errorMessage() : this._errorMessage;    \n                this._error = error;\n                break;\n            }\n        }\n    }\n\n    public isRequired(): PropertyValidator<T, TProperty>\n    {\n        this._lastValidationRule = new InternalPropertyValidationRule<T, TProperty>();\n        this._lastValidationRule.ensure((propertyValue: TProperty) =>\n        {\n            if (propertyValue != null)\n            {\n                if ((typeof propertyValue) === \"string\")\n                {\n                    return !(<string>(<any>propertyValue)).isEmptyOrWhiteSpace();\n                }\n                return true;\n            }\n            return false;\n        });\n\n        this._lastValidationRule.withMessage(\"Required\");\n        this._validationRules.push(this._lastValidationRule);\n        return this;\n    }\n\n    public isOptional(): PropertyValidator<T, TProperty>\n    {\n        this._lastValidationRule = new InternalPropertyValidationRule<T, TProperty>();\n        this._lastValidationRule.ensure((propertyValue: TProperty) =>\n        {\n            if (propertyValue == null)\n                throw \"OPTIONAL\";\n\n            if ((typeof propertyValue) === \"string\" && (<string>(<any>propertyValue)).isEmptyOrWhiteSpace())\n                throw \"OPTIONAL\";\n\n            return true;\n        });\n\n        this._validationRules.push(this._lastValidationRule);\n        return this;\n    }\n    \n    public ensureIsBoolean(): PropertyValidator<T, TProperty>\n    {\n        this._lastValidationRule = new InternalPropertyValidationRule<T, TProperty>();\n        this._lastValidationRule.ensure((propertyValue: TProperty) => typeof(propertyValue) === \"boolean\");\n\n        this._lastValidationRule.withMessage(\"Must be boolean\");\n        this._validationRules.push(this._lastValidationRule);\n        return this;\n    }\n    \n    public ensureIsString(): PropertyValidator<T, TProperty>\n    {\n        this._lastValidationRule = new InternalPropertyValidationRule<T, TProperty>();\n        this._lastValidationRule.ensure((propertyValue: TProperty) => typeof (propertyValue) === \"string\");\n\n        this._lastValidationRule.withMessage(\"Must be string\");\n        this._validationRules.push(this._lastValidationRule);\n        return this;\n    }\n    \n    public ensureIsNumber(): PropertyValidator<T, TProperty>\n    {\n        this._lastValidationRule = new InternalPropertyValidationRule<T, TProperty>();\n        this._lastValidationRule.ensure((propertyValue: TProperty) => typeof (propertyValue) === \"number\");\n\n        this._lastValidationRule.withMessage(\"Must be number\");\n        this._validationRules.push(this._lastValidationRule);\n        return this;\n    }\n    \n    public ensureIsObject(): PropertyValidator<T, TProperty>\n    {\n        this._lastValidationRule = new InternalPropertyValidationRule<T, TProperty>();\n        this._lastValidationRule.ensure((propertyValue: TProperty) => typeof (propertyValue) === \"object\");\n\n        this._lastValidationRule.withMessage(\"Must be object\");\n        this._validationRules.push(this._lastValidationRule);\n        return this;\n    }\n    \n    public ensureIsArray(): PropertyValidator<T, TProperty>\n    {\n        this._lastValidationRule = new InternalPropertyValidationRule<T, TProperty>();\n        this._lastValidationRule.ensure((propertyValue: TProperty) => Array.isArray(propertyValue));\n\n        this._lastValidationRule.withMessage(\"Must be array\");\n        this._validationRules.push(this._lastValidationRule);\n        return this;\n    }\n    \n    public ensure(propertyValidationPredicate: (propertyValue: TProperty) => boolean): PropertyValidator<T, TProperty>\n    {\n        this._lastValidationRule = new InternalPropertyValidationRule<T, TProperty>();\n        this._lastValidationRule.ensure(propertyValidationPredicate);\n        this._validationRules.push(this._lastValidationRule);\n        return this;\n    }\n\n    public ensureT(valueValidationPredicate: (value: T) => boolean): PropertyValidator<T, TProperty>\n    {\n        this._lastValidationRule = new InternalPropertyValidationRule<T, TProperty>();\n        this._lastValidationRule.ensureT(valueValidationPredicate);\n        this._validationRules.push(this._lastValidationRule);\n        return this;\n    }\n\n    public useValidationRule(validationRule: ValidationRule<TProperty>): PropertyValidator<T, TProperty>\n    {\n        this._lastValidationRule = new InternalPropertyValidationRule<T, TProperty>();\n        this._lastValidationRule.useValidationRule(validationRule);\n        this._validationRules.push(this._lastValidationRule);\n        return this;\n    }\n\n    public useValidator(validator: Validator<TProperty>): PropertyValidator<T, TProperty>\n    {\n        this._lastValidationRule = new InternalPropertyValidationRule<T, TProperty>();\n        this._lastValidationRule.useValidator(validator);\n        this._validationRules.push(this._lastValidationRule);\n        return this;\n    }\n\n    public if(conditionPredicate: (value: T) => boolean): PropertyValidator<T, TProperty>\n    {\n        given(conditionPredicate, \"conditionPredicate\").ensureHasValue();\n\n        if (this._lastValidationRule == null)\n            this._conditionPredicate = conditionPredicate;\n        else\n            this._lastValidationRule.if(conditionPredicate);\n\n        return this;\n    }\n\n    public withMessage(errorMessage: string | Function): PropertyValidator<T, TProperty>\n    {\n        given(errorMessage, \"errorMessage\")\n            .ensureHasValue();\n        \n        if (typeof errorMessage === \"string\")\n        {\n            given(errorMessage, \"errorMessage\")\n                .ensureIsString()\n                .ensure(t => !t.isEmptyOrWhiteSpace());\n            \n            errorMessage = errorMessage.trim();\n        }\n        else if (typeof errorMessage === \"function\")\n        {\n            given(errorMessage, \"errorMessage\")\n                .ensureIsFunction();\n        }\n        else\n            throw new ArgumentException(\"errorMessage\", \"has to be a string or a function that returns a string\"); \n            \n\n        if (this._lastValidationRule == null)\n        {\n            this._overrideError = true;\n            this._errorMessage = errorMessage;\n        }\n        else\n            this._lastValidationRule.withMessage(errorMessage, true);\n\n        return this;\n    }\n}\n\n"]}