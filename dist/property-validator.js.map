{"version":3,"file":"property-validator.js","sourceRoot":"","sources":["../src/property-validator.ts"],"names":[],"mappings":"","sourcesContent":["import { ValidationRule } from \"./validation-rule\";\nimport { Validator } from \"./validator\";\n\n// public\nexport interface PropertyValidator<T, TProperty>\n{\n    isRequired(): PropertyValidator<T, TProperty>;\n    isOptional(): PropertyValidator<T, TProperty>;\n    ensureIsBoolean(): PropertyValidator<T, TProperty>;\n    ensureIsString(): PropertyValidator<T, TProperty>;\n    ensureIsNumber(): PropertyValidator<T, TProperty>;\n    ensureIsObject(): PropertyValidator<T, TProperty>;\n    ensureIsArray(): PropertyValidator<T, TProperty>;\n    ensure(validationPredicate: (propertyValue: TProperty) => boolean): PropertyValidator<T, TProperty>;\n    ensureT(validationPredicate: (value: T) => boolean): PropertyValidator<T, TProperty>;\n    useValidationRule(validationRule: ValidationRule<TProperty>): PropertyValidator<T, TProperty>;\n    useValidator(validationRule: Validator<TProperty>): PropertyValidator<T, TProperty>;\n    if(conditionPredicate: (value: T) => boolean): PropertyValidator<T, TProperty>;\n    withMessage(errorMessage: string | Function): PropertyValidator<T, TProperty>;\n}"]}