{"version":3,"file":"internal-property-validation-rule.js","sourceRoot":"","sources":["../src/internal-property-validation-rule.ts"],"names":[],"mappings":"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","sourcesContent":["import { ValidationRule } from \"./validation-rule\";\nimport { Validator } from \"./validator\";\nimport { given } from \"n-defensive\";\nimport { InvalidOperationException } from \"n-exception\";\n\n// internal\nexport class InternalPropertyValidationRule<T, TProperty>\n{\n    private _tpropertyValidationPredicate: (propertyValue: TProperty) => boolean;\n    private _tValidationPredicate: (value: T) => boolean;\n    private _validationRule: ValidationRule<TProperty>;\n    private _validator: Validator<TProperty>;\n    private _conditionPredicate: (value: T) => boolean;\n    private _error: string;\n    private _overrideError = false;\n\n\n    public get error(): Object\n    {\n        if (this._validationRule != null && !this._overrideError)\n            return this._validationRule.error;\n        else if (this._validator != null && !this._overrideError)\n            return this._validator.errors;\n        else return this._error;\n    }\n\n\n    public ensure(tpropertyValidationPredicate: (propertyValue: TProperty) => boolean): void\n    {\n        given(tpropertyValidationPredicate, \"tpropertyValidationPredicate\").ensureHasValue();\n\n        this._tpropertyValidationPredicate = tpropertyValidationPredicate;\n        this._error = \"Invalid value\";\n    }\n\n    public ensureT(tValidationPredicate: (value: T) => boolean): void\n    {\n        given(tValidationPredicate, \"tValidationPredicate\").ensureHasValue();\n\n        this._tValidationPredicate = tValidationPredicate;\n        this._error = \"Invalid value\";\n    }\n\n    public useValidationRule(validationRule: ValidationRule<TProperty>): void\n    {\n        given(validationRule, \"validationRule\").ensureHasValue();\n\n        this._validationRule = validationRule;\n    }\n\n    public useValidator(validator: Validator<TProperty>): void\n    {\n        given(validator, \"validator\").ensureHasValue();\n\n        this._validator = validator;\n    }\n\n    public if(conditionPredicate: (value: T) => boolean): void\n    {\n        given(conditionPredicate, \"conditionPredicate\").ensureHasValue();\n\n        this._conditionPredicate = conditionPredicate;\n    }\n\n    public withMessage(errorMessage: string): void\n    {\n        given(errorMessage, \"errorMessage\").ensureHasValue().ensure(t => !t.isEmptyOrWhiteSpace());\n\n        this._error = errorMessage;\n        this._overrideError = true;\n    }\n\n    public validate(value: T, propertyValue: TProperty): boolean\n    {\n        if (this._conditionPredicate != null && !this._conditionPredicate(value))\n            return true;\n\n        if (this._tpropertyValidationPredicate != null)\n            return this._tpropertyValidationPredicate(propertyValue);\n\n        if (this._tValidationPredicate != null)\n            return this._tValidationPredicate(value);\n\n        if (this._validationRule != null)\n            return this._validationRule.validate(propertyValue);\n\n        if (this._validator != null)\n        {\n            this._validator.validate(propertyValue);\n            return this._validator.isValid;\n        }\n\n        throw new InvalidOperationException(\"Validate\");\n    }\n}"]}