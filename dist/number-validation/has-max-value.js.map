{"version":3,"file":"has-max-value.js","sourceRoot":"","sources":["../../src/number-validation/has-max-value.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAA,6EAAyE;AAEzE,2CAAoC;AACpC,iBAAe;AAEf,SAAS;AACT,qBAA4B,QAAgB;IAExC,MAAM,CAAC,IAAI,iBAAiB,CAAC,QAAQ,CAAC,CAAC;AAC3C,CAAC;AAHD,kCAGC;AAED;IAAgC,qCAAwB;IAEpD,2BAAmB,QAAgB;QAAnC,iBASC;QAPG,mBAAK,CAAC,QAAQ,EAAE,UAAU,CAAC,CAAC,cAAc,EAAE,CAAC;QAC7C,QAAA,iBAAO,SAAC;QACR,KAAI,CAAC,iBAAiB,CAClB;YACI,QAAQ,EAAE,UAAA,CAAC,IAAI,OAAA,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,QAAQ,EAA1B,CAA0B;YACzC,KAAK,EAAE,kCAAkC,CAAC,MAAM,CAAC,QAAQ,CAAC;SAC7D,CAAC,CAAC;;IACX,CAAC;IACL,wBAAC;AAAD,CAAC,AAZD,CAAgC,sDAAwB,GAYvD","sourcesContent":["import { BaseNumberValidationRule } from \"./base-number-validation-rule\";\nimport { ValidationRule } from \"./../validation-rule\";\nimport { given } from \"n-defensive\";\nimport \"n-ext\";\n\n// public\nexport function hasMaxValue(maxValue: number): ValidationRule<number>\n{\n    return new NumberHasMaxValue(maxValue);\n}\n\nclass NumberHasMaxValue extends BaseNumberValidationRule\n{\n    public constructor(maxValue: number)\n    {\n        given(maxValue, \"maxValue\").ensureHasValue();\n        super();\n        this.addValidationRule(\n            {\n                validate: t => t == null || t <= maxValue,\n                error: \"Value cannot be greater than {0}\".format(maxValue)\n            });\n    }\n}"]}